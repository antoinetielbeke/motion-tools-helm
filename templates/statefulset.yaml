{{- if ne (int .Values.replicaCount) 1 }}
  {{- fail "Motion Tools must run with exactly 1 replica. Please set replicaCount to 1." }}
{{- end }}
{{- if .Values.autoscaling.enabled }}
  {{- fail "Motion Tools doesn't support horizontal scaling. Please set autoscaling.enabled to false." }}
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "motion-tools.fullname" . }}
  labels:
    {{- include "motion-tools.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "motion-tools.fullname" . }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "motion-tools.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "motion-tools.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "motion-tools.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.mariadb.enabled .Values.valkey.enabled }}
      initContainers:
        - name: init-container
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - sh
            - -c
            - |
              {{- if .Values.mariadb.enabled }}
              until nc -z {{ include "motion-tools.databaseHost" . }} {{ include "motion-tools.databasePort" . }}; do
                echo "Waiting for database to be ready..."
                sleep 5
              done
              echo "Database is ready!"
              {{- end }}
              {{- if .Values.valkey.enabled }}
              until nc -z {{ include "motion-tools.valkeyHost" . }} {{ .Values.motionTools.valkey.port | default 6379 }}; do
                echo "Waiting for Valkey to be ready..."
                sleep 5
              done
              echo "Valkey is ready!"
              {{- end }}
              exit 0
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "motion-tools.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            # Timezone configuration
            - name: TIMEZONE
              value: {{ .Values.motionTools.timezone | quote }}

            # Apache configuration
            - name: APACHE_FQDN
              value: {{ .Values.motionTools.apacheFqdn | quote }}

            # Database configuration
            - name: DB_HOST
              value: {{ include "motion-tools.databaseHost" . }}
            - name: DB_PORT
              value: {{ include "motion-tools.databasePort" . | quote }}
            - name: DB_NAME
              value: {{ include "motion-tools.databaseName" . }}
            - name: DB_USER
              value: {{ include "motion-tools.databaseUser" . }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "motion-tools.databaseSecretName" . }}
                  key: {{ include "motion-tools.databaseSecretPasswordKey" . }}

            {{- if .Values.motionTools.smtp.enabled }}
            # SMTP configuration
            - name: SMTP_HOST
              value: {{ .Values.motionTools.smtp.host | quote }}
            - name: SMTP_PORT
              value: {{ .Values.motionTools.smtp.port | quote }}
            - name: SMTP_FROM
              value: {{ .Values.motionTools.smtp.from | quote }}
            - name: SMTP_USER
              value: {{ .Values.motionTools.smtp.user | quote }}
            - name: SMTP_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "motion-tools.smtpSecretName" . }}
                  key: {{ .Values.motionTools.smtp.secretKey }}
            {{- end }}

            {{- if .Values.motionTools.valkey.enabled }}
            # Valkey configuration (Redis-compatible)
            - name: REDIS_HOST
              value: {{ include "motion-tools.valkeyHost" . | quote }}
            - name: REDIS_PORT
              value: {{ .Values.motionTools.valkey.port | quote }}
            - name: REDIS_DATABASE
              value: {{ .Values.motionTools.valkey.database | quote }}
            {{- if .Values.motionTools.valkey.password }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "motion-tools.valkeySecretName" . }}
                  key: {{ .Values.motionTools.valkey.secretKey }}
            {{- end }}
            {{- end }}

            {{- if .Values.motionTools.imageMagick.enabled }}
            # ImageMagick configuration
            - name: IMAGEMAGICK_PATH
              value: {{ .Values.motionTools.imageMagick.path | quote }}
            {{- end }}

            {{- if .Values.motionTools.pdfRendering.engine }}
            # PDF rendering configuration
            - name: PDF_ENGINE
              value: {{ .Values.motionTools.pdfRendering.engine | quote }}
            {{- if eq .Values.motionTools.pdfRendering.engine "weasyprint" }}
            - name: WEASYPRINT_PATH
              value: {{ .Values.motionTools.pdfRendering.weasyprintPath | quote }}
            {{- else if eq .Values.motionTools.pdfRendering.engine "latex" }}
            - name: LUALATEX_PATH
              value: {{ .Values.motionTools.pdfRendering.lualatexPath | quote }}
            - name: PDFUNITE_PATH
              value: {{ .Values.motionTools.pdfRendering.pdfunitePath | quote }}
            {{- end }}
            {{- end }}

            {{- if .Values.motionTools.backgroundJobs.enabled }}
            # Background jobs configuration
            - name: BACKGROUND_JOBS_ENABLED
              value: "true"
            - name: BACKGROUND_JOBS_NOTIFICATIONS
              value: {{ .Values.motionTools.backgroundJobs.notifications | quote }}
            {{- if .Values.motionTools.backgroundJobs.healthCheckKey }}
            - name: HEALTH_CHECK_KEY
              value: {{ .Values.motionTools.backgroundJobs.healthCheckKey | quote }}
            {{- end }}
            {{- end }}

            {{- if .Values.motionTools.liveServer.enabled }}
            # Live server configuration
            - name: LIVE_SERVER_ENABLED
              value: "true"
            - name: LIVE_INSTALLATION_ID
              value: {{ .Values.motionTools.liveServer.installationId | quote }}
            - name: LIVE_WS_URI
              value: {{ .Values.motionTools.liveServer.wsUri | quote }}
            - name: LIVE_STOMP_JS_URI
              value: {{ .Values.motionTools.liveServer.stompJsUri | quote }}
            - name: LIVE_RABBITMQ_URI
              value: {{ .Values.motionTools.liveServer.rabbitMqUri | quote }}
            - name: LIVE_RABBITMQ_EXCHANGE
              value: {{ .Values.motionTools.liveServer.rabbitMqExchangeName | quote }}
            - name: LIVE_RABBITMQ_USERNAME
              value: {{ .Values.motionTools.liveServer.rabbitMqUsername | quote }}
            {{- if .Values.motionTools.liveServer.rabbitMqPassword }}
            - name: LIVE_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "motion-tools.rabbitMqSecretName" . }}
                  key: {{ .Values.motionTools.liveServer.rabbitMqSecretKey }}
            {{- end }}
            {{- end }}

            {{- if .Values.debug }}
            # Debug mode
            - name: DEBUG
              value: "true"
            {{- end }}

            {{- with .Values.motionTools.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          {{- with .Values.motionTools.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}

          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath | default "/var/www/html" }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}

            {{- if .Values.motionTools.jwt.enabled }}
            - name: jwt-key
              mountPath: {{ .Values.motionTools.jwt.privateKeyPath | dir }}
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

        {{- with .Values.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      {{- if or .Values.motionTools.jwt.enabled .Values.extraVolumes }}
      volumes:
        {{- if .Values.motionTools.jwt.enabled }}
        - name: jwt-key
          secret:
            secretName: {{ .Values.motionTools.jwt.privateKeySecret }}
            defaultMode: 0400
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.selector }}
        selector:
          {{- toYaml .Values.persistence.selector | nindent 10 }}
        {{- end }}
  {{- end }}